
# autoconf tutorial: 
# http://www.galassi.org/mark//mydocs/autoconf_tutorial_2.html


SHELL = /bin/sh
VPATH = @srcdir@

subdirs = @subdirs@
top_srcdir = @top_srcdir@
srcdir = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = $(exec_prefix)/bin
infodir = $(prefix)/info
libdir = $(prefix)/lib/gnudl
mandir = $(prefix)/man/man1

CC = @CC@
CPPFLAGS = @CPPFLAGS@
CFLAGS = $(CPPFLAGS) @CFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
#INSTALL = @INSTALL@



CFLAGS += -D_GNU_SOURCE=1 -mmmx -Wall -fno-strict-aliasing -fsingle-precision-constant
CFLGAS +=  -iquote $(shell pwd)/src 
#	-Wunsafe-loop-optimizations

ifdef DEBUG
	CFLAGS += -ggdb3
else
	CFLAGS += -O2 -finline-functions -maccumulate-outgoing-args
	CFLAGS += -funroll-loops -fpeel-loops -funswitch-loops -fvariable-expansion-in-unroller -fdelete-null-pointer-checks 
	CFLAGS += -ftree-vectorize -ftree-loop-ivcanon -ftree-loop-im -ftree-loop-linear -funsafe-loop-optimizations 
	CFLAGS += -fgcse-las -fgcse-sm -fmodulo-sched 
	CFLAGS += -fmerge-all-constants

# on gcc 4.3 set precsicion of FPU to 32 bits (can get speed up for floats)
# do this since everywhere inside our code we use only floats
	CFLAGS += -mpc32

# let gcc generate the RCPSS and RSQRTSS instructions (fast recipricol)
	CFLAGS += -mrecip

#CFLAGS += -fipa-pta  # bugs on ubuntu

	CFLAGS += -fmodulo-sched-allow-regmoves -fgcse-after-reload -fsee -fipa-cp

	CFLAGS += -fsched-stalled-insns=2 -fsched-stalled-insns-dep=2
	CFLAGS += -fvect-cost-model -ftracer -ffast-math  -fassociative-math -freciprocal-math -fno-signed-zeros

endif

CFLAGS += -Wl,--as-needed

CFLAGS := $(shell ./gcc-optioncheck $(CFLAGS))

PA_FLAGS = @PORTAUDIO_CFLAGS@ @PORTAUDIO_LIBS@ @FFTW_CFLAGS@ @FFTW_LIBS@
JACK_FLAGS = @JACK_CFLAGS@ @JACK_LIBS@
PULSE_FLAGS = @PULSE_CFLAGS@ @PULSE_LIBS@
AUDIO_FLAGS = $(PA_FLAGS) $(JACK_FLAGS) $(PULSE_FLAGS)
SDL_FLAGS = @SDL_CFLAGS@ @SDL_LIBS@ -lSDL_ttf -lm
DFB_FLAGS = @DIRECTFB_CFLAGS@ @DIRECTFB_LIBS@

AUDIO_SRCS = src/audio/audio.c src/audio/beat.c src/audio/portaudio.c 

ifneq ($(JACK_FLAGS), )
AUDIO_SRCS += src/audio/jack.c
endif
ifneq ($(PULSE_FLAGS), )
AUDIO_SRCS += src/audio/pulseaudio.c
endif

ifeq (@LOCKING_TB@,1)
TRIBUF_SRCS = src/atomic_tribuf.c
else
TRIBUF_SRCS = src/tribuf.c
endif 

-include config.mk

#CFLAGS += -Wpointer-arith -Wmissing-prototypes -Wmissing-field-initializers \
#	-Wunreachable-code

all: bin/sdl-test bin/sdlthread-test bin/audio-test dfb

ifneq ($(DFB_FLAGS), )
dfb: bin/dfb-test
else
dfb:
endif

dfb-run: bin/dfb-test
	bin/dfb-test

run: bin/sdlthread-test
	bin/sdlthread-test

clean:
	rm -f src/*.o
	rm -f bin/dfb-test bin/audio-test bin/sdl-test bin/sdlthread-test

distclean: clean
	rm -f Makefile config.h config.status config.cache config.log configure stamp-h

.PHONY: all dfb dfb-run run clean

config.mk:
	touch config.mk

bin/sdl-test: src/sdl.c src/sdl-misc.c src/mtwist/mtwist.c $(AUDIO_SRCS) $(TRIBUF_SRCS) src/maxsrc.c src/map.c src/pallet.c src/pixmisc.c src/optproc.c src/points.c src/points.h src/common.h Makefile config.mk
	$(CC) $(CFLAGS) -DUSE_SDL \
	src/sdl.c src/sdl-misc.c src/mtwist/mtwist.c $(AUDIO_SRCS) $(TRIBUF_SRCS) src/maxsrc.c src/map.c src/pallet.c src/pixmisc.c src/optproc.c src/points.c \
	$(SDL_FLAGS) $(AUDIO_FLAGS) -o $@

bin/sdlthread-test: src/sdl-thread.c src/sdl-misc.c src/mtwist/mtwist.c $(AUDIO_SRCS) $(TRIBUF_SRCS) src/maxsrc.c src/map.c src/pallet.c src/pixmisc.c src/optproc.c src/points.c src/points.h src/common.h Makefile config.mk
	$(CC) $(CFLAGS) -DUSE_SDL -DTRIBUF_LOCKING \
	src/sdl-thread.c src/sdl-misc.c src/mtwist/mtwist.c $(AUDIO_SRCS) $(TRIBUF_SRCS) src/maxsrc.c src/map.c src/pallet.c src/pixmisc.c src/optproc.c src/points.c \
	$(SDL_FLAGS) $(AUDIO_FLAGS) -o $@

bin/dfb-test: src/directfb.c src/map.c src/pallet.c src/pixmisc.c src/optproc.c $(TRIBUF_SRCS) src/common.h Makefile config.mk
	$(CC) $(CFLAGS) -DUSE_DIRECTFB \
	src/directfb.c src/map.c src/pallet.c src/pixmisc.c src/optproc.c $(TRIBUF_SRCS) \
	$(DFB_FLAGS) $(AUDIO_FLAGS) -o $@

bin/audio-test: $(AUDIO_SRCS) src/audio/sdl-test.c src/sdl-misc.c src/optproc.c $(TRIBUF_SRCS) src/line.c
	$(CC) -DFFT_TRIBUF -DUSE_SDL $(CFLAGS) \
	$(AUDIO_SRCS) src/audio/sdl-test.c src/sdl-misc.c src/optproc.c $(TRIBUF_SRCS) src/line.c \
	$(SDL_FLAGS) $(AUDIO_FLAGS) -o $@

%.s: %.c src/*.h Makefile config.mk
	$(CC) $< $(CFLAGS) -S -o $@


# automatic re-running of configure if the ocnfigure.in file has changed
configure: configure.ac
	autoconf

# autoheader might not change config.h.in, so touch a stamp file
src/config.h.in: stamp-h.in
stamp-h.in: configure.ac
		autoheader
		echo timestamp > stamp-h.in

src/config.h: stamp-h
stamp-h: config.h.in config.status
	./config.status
Makefile: Makefile.in config.status
	./config.status
config.status: configure
	./config.status --recheck
