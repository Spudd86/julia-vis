# @configure_input@
# autoconf tutorial:
# http://www.galassi.org/mark//mydocs/autoconf_tutorial_2.html

SHELL = /bin/sh
VPATH = @srcdir@

subdirs = @subdirs@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@
srcdir = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = $(exec_prefix)/bin
infodir = $(prefix)/info
libdir = $(prefix)/lib/gnudl
mandir = $(prefix)/man/man1

EXEEXT=@EXEEXT@

CC = @CC@
CPPFLAGS = @CPPFLAGS@ -include ${top_builddir}/config.h
CFLAGS = $(CPPFLAGS) @CFLAGS@ @PTHREAD_CFLAGS@
LDFLAGS = @LDFLAGS@ -Wl,-O1,--sort-common -Wl,--as-needed -Wl,--gc-sections -Wl,-no-undefined
LIBS = @LIBS@ @PTHREAD_LIBS@
INSTALL = @INSTALL@

ENABLE_JACK=@enable_jack@
ENABLE_PULSE=@enable_pulseaudio@
ENABLE_PORTAUDIO=@enable_portaudio@
ENABLE_SNDFILE=@enable_sndfile@
ENABLE_GL=@enable_opengl@
ENABLE_EGL=@enable_egl@
ENABLE_X11=@enable_x11@
ENABLE_KMS=@enable_kms@

CFLAGS += -Wall -Wextra -Wdouble-promotion \
	-Wnested-externs -Wpointer-arith \
	-Wsign-compare -Wchar-subscripts \
	-Wstrict-prototypes -Wshadow \
	-Wformat-security -Wtype-limits \
	-Wcast-qual -Wwrite-strings -Wlogical-op -Waggregate-return \
	-Wunsuffixed-float-constants \
	-fno-strict-aliasing
#-Wunsafe-loop-optimizations -Wconversion -Wstrict-prototypes
CFLAGS += -I "./src" -I "./tinycthread" -I "./nuklear"

ifeq (@enable_debug@,yes)
	DEBUG=1
endif

-include config.mk

ifdef DEBUG
	CFLAGS += -ggdb3 -O0
else
	CFLAGS += -DNDEBUG
	CFLAGS += -g3 -O2
	#CFLAGS += -finline-functions
	#CFLAGS += -finline-functions -maccumulate-outgoing-args -fdelete-null-pointer-checks
	#CFLAGS += -funroll-loops -fpeel-loops -funswitch-loops -fvariable-expansion-in-unroller
	#CFLAGS += -ftree-vectorize -ftree-loop-ivcanon -ftree-loop-im -ftree-loop-linear
	#CFLAGS += -funsafe-loop-optimizations
	#CFLAGS += -fgcse-las -fgcse-sm -fmodulo-sched
	#CFLAGS += -fmerge-all-constants

# on gcc 4.3 set precsicion of FPU to 32 bits (can get speed up for floats)
# do this since everywhere inside our code we use only floats
# -mrecip = let gcc generate the RCPSS and RSQRTSS instructions (fast recipricol)
	#CFLAGS += -mpc32 -mrecip=all
	#CFLAGS += -ffast-math  -fassociative-math -freciprocal-math -fno-signed-zeros
endif

#CFLAGS := $(shell ./gcc-optioncheck $(CFLAGS))

PA_CFLAGS = @PORTAUDIO_CFLAGS@
PA_LIBS = @PORTAUDIO_LIBS@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_LIBS = @JACK_LIBS@
PULSE_CFLAGS = @PULSE_CFLAGS@
PULSE_LIBS = @PULSE_LIBS@
SNDFILE_CFLAGS = @SNDFILE_CFLAGS@
SNDFILE_LIBS = @SNDFILE_LIBS@
AUDIO_CFLAGS = $(PA_CFLAGS) $(JACK_CFLAGS) $(PULSE_CFLAGS) $(SNDFILE_CFLAGS)
AUDIO_LIBS = $(PA_LIBS) $(JACK_LIBS) $(PULSE_LIBS) $(SNDFILE_LIBS)

SDL_CFLAGS = @SDL_CFLAGS@
SDL_LIBS = @SDL_LIBS@
GL_CFLAGS = @GL_CFLAGS@ @GLU_CFLAGS@
GL_LIBS = @GL_LIBS@ @GLU_LIBS@
EGL_CFLAGS = @EGL_CFLAGS@
EGL_LIBS = @EGL_LIBS@
KMS_CFLAGS = @GBM_CFLAGS@ @DRM_CFLAGS@
KMS_LIBS = @GBM_LIBS@ @DRM_LIBS@
X11_CFLAGS = @X11_CFLAGS@
X11_LIBS = @X11_LIBS@

ORC_CFLAGS = @ORC_CFLAGS@
ORC_LIBS = @ORC_LIBS@

GL_LOADER = src/opengl/gl_14.o

ALL_BINS := bin/sdl-test$(EXEEXT) bin/sdlthread-test$(EXEEXT) bin/audio-test$(EXEEXT) bin/pal-test$(EXEEXT)
ifeq ($(ENABLE_GL),yes)
	ALL_BINS += bin/gl-test$(EXEEXT)
endif
ifeq ($(ENABLE_X11),yes)
	ALL_BINS += bin/glx-test$(EXEEXT)
	#ALL_BINS += bin/fps-test$(EXEEXT)
	ifeq ($(ENABLE_EGL),yes)
		ALL_BINS += bin/egl-test$(EXEEXT)
	endif
endif
ifeq ($(ENABLE_KMS),yes)
	ALL_BINS += bin/kms-test$(EXEEXT)
endif

AUDIO_SRCS = src/audio/audio.c src/audio/beat.c src/audio/fft.c

COMMON_SRCS = src/terminusIBM.c src/isaac/isaac.c src/pallet.c src/optproc.c src/points.c tinycthread/tinycthread.c

SOFT_SRCS = src/software/map.c src/software/maxsrc.c src/software/palletblit.c src/software/pixmisc.c src/paratask/paratask.c

SDL_SOFT_SRCS = src/software/sdl/sdl-text.c src/sdl/sdlsetup.c src/software/sdl/sdl-palblit.c

X86_SOFT_SRCS = src/software/x86/cpuid.c src/software/x86/mmx.c src/software/x86/3dNOW.c src/software/x86/sse.c src/software/x86/sse2.c src/software/x86/ssse3.c src/software/x86/sse4_1.c src/software/x86/avx2.c

GL_COMMON_SRCS = src/opengl/glmain.c src/opengl/glmisc.c src/opengl/glscope.c src/opengl/mandelbrot.c src/opengl/offscreen.c

GL_FIXED_SRCS = src/opengl/fixed/glf_maxsrc.c src/opengl/fixed/glf_pal.c src/opengl/fixed/glmap.c src/opengl/fixed/glf_fract.c

GL_GLSL_SRCS =  src/opengl/glsl/glsl_maxsrc.c src/opengl/glsl/glsl_pallet.c src/opengl/glsl/glsl_fract.c

GL_SDL_SRCS = src/sdl/sdlglmain.c src/sdl/sdlsetup.c

TRIBUF_SRCS = src/tribuf.c

#needs tinycthread just in case filedecode audio backend is enabled
AUDIO_TEST_SRCS = src/audio/beat.c src/audio/fft.c src/audio/rb.c src/optproc.c src/software/sdl/sdl-text.c src/sdl/sdlsetup.c src/terminusIBM.c src/software/sdl/line.c tinycthread/tinycthread.c

ifeq ($(ENABLE_JACK),yes)
AUDIO_DRV_SRCS += src/audio/jack.c
endif
ifeq ($(ENABLE_PULSE),yes)
AUDIO_DRV_SRCS += src/audio/pulseaudio.c
endif
ifeq ($(ENABLE_PORTAUDIO),yes)
AUDIO_DRV_SRCS += src/audio/portaudio.c
endif
ifeq ($(ENABLE_SNDFILE),yes)
#FIXME: Avoid having tinycthread in software versions twice
AUDIO_DRV_SRCS += src/audio/filedecode.c
endif

AUDIO_DRV_OBJS = $(AUDIO_DRV_SRCS:.c=.o)

AUDIO_SRCS += $(AUDIO_DRV_SRCS)

AUDIO_OBJS = $(AUDIO_SRCS:.c=.o)

COMMON_OBJS = $(COMMON_SRCS:.c=.o)

SOFT_OBJS = $(SOFT_SRCS:.c=.o)

SDL_SOFT_OBJS = $(SDL_SOFT_SRCS:.c=.o)

X86_SOFT_OBJS = $(X86_SOFT_SRCS:.c=.o)

GL_SDL_OBJS = $(GL_SDL_SRCS:.c=.o)

GL_COMMON_OBJS = $(GL_COMMON_SRCS:.c=.o)

GL_FIXED_OBJS = $(GL_FIXED_SRCS:.c=.o)

GL_GLSL_OBJS = $(GL_GLSL_SRCS:.c=.o)

GL_OBJS = $(GL_COMMON_OBJS) $(GL_FIXED_OBJS) $(GL_GLSL_OBJS)

TRIBUF_OBJS = $(TRIBUF_SRCS:.c=.o)

AUDIO_TEST_OBJS = $(AUDIO_TEST_SRCS:.c=.o)

ALL_OBJS =\
$(AUDIO_DRV_OBJS) $(AUDIO_OBJS) $(COMMON_OBJS) \
$(SOFT_OBJS) $(X86_SOFT_OBJS) $(GL_COMMON_OBJS) \
$(GL_FIXED_OBJS) $(GL_GLSL_OBJS) $(AUDIO_TEST_OBJS) \
$(TRIBUF_OBJS) \
src/opengl/glscope-test.o src/opengl/glscope.o src/opengl/glmisc.o \
src/tess/scopetris.o src/tess/hset.o src/opengl/glmisc.o src/opengl/glmap.o \
src/opengl/glx/glx_gen.o \
src/opengl/glx/glxmain.o \
src/opengl/glx/fpsmain.o src/opengl/fpsservo/fpsservo.o \
src/opengl/eglmain.o src/opengl/egl/xegl.o \
src/opengl/egl/kms.o \
src/software/sdl/sdl.o src/software/sdl/sdl-thread.o \
src/sdl/audiotest.o \
src/software/sdl/test_palletblit.o \
src/software/sdl/test_pallets.o

DEPS = $(ALL_OBJS:.o=.dep)

ifeq (@disable_atomics@,yes)
CFLAGS += -DTB_NO_ATOMIC
endif

all: $(ALL_BINS)

run: bin/sdlthread-test
	bin/sdlthread-test

clean:
	-rm -f $(ALL_OBJS)
	-rm -f src/opengl/gl_14.o
	-rm -f $(ALL_BINS)

depclean:
	-rm -f $(DEPS)

distclean: clean depclean
	-rm -f Makefile config.h config.status config.cache config.log configure stamp-h

.PHONY: all dfb dfb-run run clean depclean distclean

config.mk:
	touch config.mk

bin/gl-test$(EXEEXT): $(GL_LOADER) $(GL_SDL_OBJS) $(GL_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) -DUSE_GL \
	$(GL_SDL_OBJS) $(GL_OBJS) \
	$(COMMON_OBJS)  $(AUDIO_OBJS) $(TRIBUF_OBJS) \
	$(GL_LOADER) $(SDL_CFLAGS) $(AUDIO_CFLAGS) $(GL_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(AUDIO_LIBS) $(GL_LIBS) $(LIBS) -o $@

bin/glscope-test$(EXEEXT): $(GL_LOADER) $(GL_SDL_OBJS) src/opengl/glscope-test.o src/opengl/glscope.o src/opengl/glmisc.o $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) -DUSE_GL \
	$(GL_SDL_OBJS) src/opengl/glscope-test.o src/opengl/glscope.o src/opengl/glmisc.o \
	$(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) \
	$(GL_LOADER) $(SDL_CFLAGS) $(AUDIO_CFLAGS) $(GL_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(AUDIO_LIBS) $(GL_LIBS) $(LIBS) -o $@

bin/glscopetris-test$(EXEEXT): src/opengl/glmap.o $(GL_LOADER) $(GL_SDL_OBJS) src/tess/scopetris.o src/tess/hset.o src/opengl/glmisc.o $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) -DUSE_GL -DSCOPETRIS_TEST \
	$(GL_SDL_OBJS) src/tess/scopetris.o src/tess/hset.o src/opengl/glmaxsrc.o src/opengl/glmisc.o \
	src/opengl/glmap.o \
	$(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) \
	$(GL_LOADER) $(SDL_CFLAGS) $(AUDIO_CFLAGS) $(GL_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(AUDIO_LIBS) $(GL_LIBS) $(LIBS) -o $@

bin/glx-test$(EXEEXT): $(GL_LOADER) src/opengl/glx/glxmain.o src/opengl/glx/glx_gen.o $(GL_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) $(X11_CFLAGS) -DUSE_GL \
	src/opengl/glx/glxmain.o $(X11_LIBS) $(GL_OBJS) \
	src/opengl/glx/glx_gen.o \
	$(COMMON_OBJS)  $(AUDIO_OBJS) $(TRIBUF_OBJS) \
	$(AUDIO_CFLAGS) $(GL_CFLAGS) $(GL_LOADER) $(LDFLAGS) $(GL_LIBS) $(AUDIO_LIBS) $(LIBS) -o $@

bin/fps-test$(EXEEXT): $(GL_LOADER) src/opengl/glx/fpsmain.o src/opengl/fpsservo/fpsservo.o src/opengl/glx/glx_gen.o $(GL_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) $(X11_CFLAGS) -DUSE_GL \
	src/opengl/glx/fpsmain.o $(X11_LIBS) $(GL_OBJS) \
	src/opengl/fpsservo/fpsservo.o \
	src/opengl/glx/glx_gen.o \
	$(COMMON_OBJS)  $(AUDIO_OBJS) $(TRIBUF_OBJS) \
	$(AUDIO_CFLAGS) $(GL_CFLAGS) $(GL_LOADER) $(LDFLAGS) $(AUDIO_LIBS) $(GL_LIBS) $(LIBS) -o $@

bin/egl-test$(EXEEXT): src/opengl/egl/xegl.o $(GL_LOADER) src/opengl/eglmain.o $(GL_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) $(X11_CFLAGS) -DUSE_GL \
	src/opengl/egl/xegl.o src/opengl/eglmain.o $(X11_LIBS) $(GL_OBJS) \
	$(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) \
	$(EGL_CFLAGS) $(EGL_LIBS) $(AUDIO_CFLAGS) $(GL_CFLAGS) $(GL_LOADER) $(LDFLAGS) $(AUDIO_LIBS) $(GL_LIBS) $(LIBS) -o $@

bin/kms-test$(EXEEXT): $(GL_LOADER) src/opengl/egl/kms.o $(GL_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) -DUSE_GL \
	src/opengl/egl/kms.o $(GL_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) \
	$(AUDIO_CFLAGS) \
	$(LDFLAGS) \
	$(KMS_CFLAGS) $(KMS_LIBS) $(EGL_CFLAGS) $(EGL_LIBS) \
	$(GL_CFLAGS) $(GL_LOADER) $(GL_LIBS) $(AUDIO_LIBS) $(LIBS) -o $@

bin/sdl-test$(EXEEXT): src/software/sdl/sdl.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) \
	src/software/sdl/sdl.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) \
	$(SDL_CFLAGS) $(AUDIO_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(AUDIO_LIBS) $(LIBS) -o $@

bin/sdlthread-test$(EXEEXT): src/software/sdl/sdl-thread.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) \
	src/software/sdl/sdl-thread.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(AUDIO_OBJS) $(TRIBUF_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) \
	$(SDL_CFLAGS) $(AUDIO_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(AUDIO_LIBS) $(LIBS) -o $@

bin/audio-test$(EXEEXT): src/sdl/audiotest.o $(AUDIO_DRV_OBJS) $(AUDIO_TEST_OBJS)
	$(CC) $(CFLAGS) \
	src/sdl/audiotest.o $(AUDIO_DRV_OBJS) $(AUDIO_TEST_OBJS) \
	$(SDL_CFLAGS) $(AUDIO_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(AUDIO_LIBS) $(LIBS) -o $@

bin/pal-test$(EXEEXT): src/software/sdl/test_palletblit.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) \
	src/software/sdl/test_palletblit.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) \
	$(SDL_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(LIBS) -o $@

bin/pal-test2$(EXEEXT): src/software/sdl/test_pallets.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) \
	src/software/sdl/test_pallets.o $(SDL_SOFT_OBJS) $(COMMON_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) \
	$(SDL_CFLAGS) $(LDFLAGS) $(SDL_LIBS) $(LIBS) -o $@

bin/palblit-test$(EXEEXT): src/software/test/palblit.o $(COMMON_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) Makefile config.mk
	$(CC) $(CFLAGS) \
	src/software/test/palblit.o $(COMMON_OBJS) $(SOFT_OBJS) $(X86_SOFT_OBJS) \
	$(LDFLAGS) $(LIBS) -o $@

-include $(DEPS)

src/opengl/gl_14.o: src/opengl/gl_14.c
	$(CC) -g -O2 $(GL_CFLAGS) -w -c $< -o $@

src/opengl/glx/glx_gen.o: src/opengl/glx/glx_gen.c
	$(CC) -c $(CFLAGS) $(GL_CFLAGS) $(X11_CFLAGS) -w $< -o $@

src/software/x86/mmx.o: src/software/x86/mmx.c src/software/x86/palblit_mmxsse.h src/common.h src/software/pixmisc.h Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) -mno-sse -mmmx $< -MF $*.dep
	$(CC) -c $(CFLAGS) -mno-sse -mmmx $< -o $@

src/software/x86/3dNOW.o: src/software/x86/3dNOW.c src/software/x86/palblit_mmxsse.h src/common.h src/software/pixmisc.h Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) -mno-sse -m3dnow $< -MF $*.dep
	$(CC) -c $(CFLAGS) -mno-sse -m3dnow $< -o $@

src/software/x86/sse.o: src/software/x86/sse.c src/software/x86/palblit_mmxsse.h src/common.h src/software/pixmisc.h Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) -mno-sse2 -msse $< -MF $*.dep
	$(CC) -c $(CFLAGS) -mno-sse2 -msse $< -o $@

src/software/x86/sse2.o: src/software/x86/sse2.c src/common.h src/software/pixmisc.h Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) -mno-sse3 -msse2 $< -MF $*.dep
	$(CC) -c $(CFLAGS) -mno-sse3 -msse2 $< -o $@

src/software/x86/ssse3.o: src/software/x86/ssse3.c src/common.h src/software/pixmisc.h Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) -mno-sse4.1 -mssse3 $< -MF $*.dep
	$(CC) -c $(CFLAGS) -mno-sse4.1 -mssse3 $< -o $@

src/software/x86/sse4_1.o: src/software/x86/sse4_1.c src/common.h src/software/pixmisc.h Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) -msse4.1 $< -MF $*.dep
	$(CC) -c $(CFLAGS) -msse4.1 $< -o $@

src/software/x86/avx2.o: src/software/x86/avx2.c src/common.h src/software/pixmisc.h Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) -mavx2 -mvzeroupper $< -MF $*.dep
	$(CC) -c $(CFLAGS) -mavx2 -mvzeroupper $< -o $@

tinycthread/%.o: tinycthread/%.c Makefile config.mk
	@$(CC) -MM -MQ $@ @CFLAGS@ @CPPFLAGS@ @PTHREAD_CFLAGS@ $< -MF tinycthread/$*.dep
	$(CC) @CFLAGS@ @CPPFLAGS@ @PTHREAD_CFLAGS@ -c $< -o $@

src/audio/%.o: src/audio/%.c Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) $(AUDIO_CFLAGS) $< -MF src/audio/$*.dep
	$(CC) $(CFLAGS) $(AUDIO_CFLAGS) -c $< -o $@

src/sdl/%.o: src/sdl/%.c Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) $(SDL_CFLAGS) $< -MF src/sdl/$*.dep
	$(CC) -c $(CFLAGS) $(SDL_CFLAGS) $< -o $@

src/software/sdl/%.o: src/software/sdl/%.c Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) $(SDL_CFLAGS) $< -MF src/software/sdl/$*.dep
	$(CC) -c $(CFLAGS) $(SDL_CFLAGS) $< -o $@

src/opengl/%.o: src/opengl/%.c
	@$(CC) -MM -MQ $@ -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $< -MF src/opengl/$*.dep
	$(CC) -c -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $< -o $@

src/opengl/glx/%.o: src/opengl/glx/%.c
	@$(CC) -MM -MQ $@ -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $(X11_CFLAGS) $< -MF src/opengl/glx/$*.dep
	$(CC) -c -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $(X11_CFLAGS) $< -o $@

src/opengl/egl/%.o: src/opengl/egl/%.c
	@$(CC) -MM -MQ $@ -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $(EGL_CFLAGS) $< -MF src/opengl/egl/$*.dep
	$(CC) -c -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $(EGL_CFLAGS) $< -o $@

src/opengl/egl/xegl.o: src/opengl/egl/xegl.c
	@$(CC) -MM -MQ $@ -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $(EGL_CFLAGS) $(X11_CFLAGS) $< -MF src/opengl/egl/xegl.dep
	$(CC) -c -DUSE_GL $(CFLAGS) $(GL_CFLAGS) $(EGL_CFLAGS) $(X11_CFLAGS) $< -o $@

src/software/x11/%.o: src/software/x11/%.c Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) $(X11_CFLAGS) $< -MF src/software/x11/$*.dep
	$(CC) -c $(CFLAGS) $(X11_CFLAGS) $< -o $@

src/%.o: src/%.c Makefile config.mk
	@$(CC) -MM -MQ $@ $(CFLAGS) $< -MF src/$*.dep
	$(CC) -c $(CFLAGS) $< -o $@

%.s: %.c src/*.h Makefile config.mk
	$(CC) $< $(CFLAGS) -fverbose-asm -S -o $@

# automatic re-running of configure if the ocnfigure.in file has changed
configure: configure.ac
	autoconf

# autoheader might not change config.h.in, so touch a stamp file
src/config.h.in: stamp-h.in
stamp-h.in: configure.ac
		autoheader
		echo timestamp > stamp-h.in

src/config.h: stamp-h
stamp-h: src/config.h.in config.status
	./config.status
Makefile: Makefile.in config.status
	./config.status
config.status: configure
	./config.status --recheck

